{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCYaqgJbl72R_qZLtc2O9HmjP9X8-1am10\",\n  authDomain: \"crwn-db-e31fa.firebaseapp.com\",\n  projectId: \"crwn-db-e31fa\",\n  storageBucket: \"crwn-db-e31fa.appspot.com\",\n  messagingSenderId: \"132540789602\",\n  appId: \"1:132540789602:web:34f3120da7eb8fb6e2f23b\",\n  measurementId: \"G-DH0ZCDM5KE\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const signInWithAccount = async (email, password) => {\n  if (!email || !password) return;\n  const signInUser = await signInWithEmailAndPassword(auth, email, password);\n  return signInUser;\n};\nexport const crearUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('Error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = () => signOut(auth);\nexport default firebase;","map":{"version":3,"sources":["/Users/lenin/Desktop/Web Development/crwn-clothing2/src/utils/firebase/firebase.utils.js"],"names":["firebase","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","doc","getDoc","setDoc","initializeApp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","signInWithAccount","email","password","signInUser","crearUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","console","log","userSnapshot","exists","displayName","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","signOutUser"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,2BAAP;AACA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,8BALF,EAMEC,0BANF,EAOEC,OAPF,QAQO,eARP;AASA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,oBAAlD;AAEA,SAASC,aAAT,QAA8B,cAA9B;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,+BAFO;AAGnBC,EAAAA,SAAS,EAAE,eAHQ;AAInBC,EAAAA,aAAa,EAAE,2BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB;AAUA,MAAMC,WAAW,GAAGT,aAAa,CAACC,cAAD,CAAjC;AAEA,MAAMS,cAAc,GAAG,IAAIlB,kBAAJ,EAAvB;AAEAkB,cAAc,CAACC,mBAAf,CAAmC;AAC/BC,EAAAA,MAAM,EAAE;AADuB,CAAnC;AAIA,OAAO,MAAMC,IAAI,GAAGxB,OAAO,EAApB;AACP,OAAO,MAAMyB,qBAAqB,GAAG,MAAMvB,eAAe,CAACsB,IAAD,EAAOH,cAAP,CAAnD;AACP,OAAO,MAAMK,wBAAwB,GAAG,MAAMzB,kBAAkB,CAACuB,IAAD,EAAOH,cAAP,CAAzD;AAEP,OAAO,MAAMM,EAAE,GAAGpB,YAAY,EAAvB;AAEP,OAAO,MAAMqB,iBAAiB,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC1D,MAAG,CAACD,KAAD,IAAU,CAACC,QAAd,EAAwB;AAExB,QAAMC,UAAU,GAAI,MAAM1B,0BAA0B,CAACmB,IAAD,EAAOK,KAAP,EAAcC,QAAd,CAApD;AACA,SAAOC,UAAP;AACD,CALM;AAOP,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,qBAAjB,KAA2C;AAClF,MAAG,CAACD,QAAJ,EAAc;AACd,QAAME,UAAU,GAAI3B,GAAG,CAACmB,EAAD,EAAK,OAAL,EAAcM,QAAQ,CAACG,GAAvB,CAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEA,QAAMI,YAAY,GAAG,MAAM9B,MAAM,CAAC0B,UAAD,CAAjC;;AAEA,MAAG,CAACI,YAAY,CAACC,MAAb,EAAJ,EAA0B;AACxB,UAAM;AAAEC,MAAAA,WAAF;AAAeZ,MAAAA;AAAf,QAAyBI,QAA/B;AACA,UAAMS,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMjC,MAAM,CAACyB,UAAD,EAAa;AACvBM,QAAAA,WADuB;AAEvBZ,QAAAA,KAFuB;AAGvBa,QAAAA,SAHuB;AAIvB,WAAGR;AAJoB,OAAb,CAAZ;AAMD,KAPD,CAQA,OAAOU,KAAP,EAAc;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCM,KAAK,CAACC,OAA7C;AACD;AACF;;AAED,SAAOV,UAAP;AACD,CAzBM;AA2BP,OAAO,MAAMW,kCAAkC,GAAG,OAAOjB,KAAP,EAAcC,QAAd,KAA2B;AAC3E,MAAG,CAACD,KAAD,IAAU,CAACC,QAAd,EAAwB;AAExB,SAAO,MAAM1B,8BAA8B,CAACoB,IAAD,EAAOK,KAAP,EAAcC,QAAd,CAA3C;AACD,CAJM;AAMP,OAAO,MAAMiB,WAAW,GAAG,MAAMzC,OAAO,CAACkB,IAAD,CAAjC;AAEP,eAAezB,QAAf","sourcesContent":["import firebase from 'firebase/compat/app'\nimport 'firebase/compat/firestore';\nimport { \n  getAuth, \n  signInWithRedirect, \n  signInWithPopup, \n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut\n} from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'\n\nimport { initializeApp } from 'firebase/app'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCYaqgJbl72R_qZLtc2O9HmjP9X8-1am10\",\n    authDomain: \"crwn-db-e31fa.firebaseapp.com\",\n    projectId: \"crwn-db-e31fa\",\n    storageBucket: \"crwn-db-e31fa.appspot.com\",\n    messagingSenderId: \"132540789602\",\n    appId: \"1:132540789602:web:34f3120da7eb8fb6e2f23b\",\n    measurementId: \"G-DH0ZCDM5KE\"\n  };\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({ \n    prompt: 'select_account'\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const signInWithAccount = async (email, password) => {\n  if(!email || !password) return;\n\n  const signInUser =  await signInWithEmailAndPassword(auth, email, password);\n  return signInUser;\n}\n\nexport const crearUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n  if(!userAuth) return;\n  const userDocRef =  doc(db, 'users', userAuth.uid);\n\n  console.log(userDocRef);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if(!userSnapshot.exists()){\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    }\n    catch (error) {\n      console.log('Error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n}\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if(!email || !password) return;\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n}\n\nexport const signOutUser = () => signOut(auth);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}